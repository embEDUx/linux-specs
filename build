#! /bin/bash -e

######################################
# Configuration                      #                    
######################################

KERNEL_VERSION="3.18.0"
KERNEL_DTB="imx6q-sbc-fx6m.dtb"
ARCH="arm"

######################################
# Script (modify only with caution!) #
######################################
KERNEL_URL=$(git remote -v | sed -n '/.git/{p;q;}' | awk '{print $(NF-1)}')
KERNEL_DIR="linux"
KERNEL_CONFIG=".config"
KERNEL_IMG="zImage"

# Cloning kernel from kernel branch
CMD="git clone -b ${KERNEL_VERSION} --depth 1 --single-branch ${KERNEL_URL}"
echo "CLONING: ${CMD}"
${CMD}

# Executing build script for kernel branch
pushd ${KERNEL_DIR}
CMD="./build"
echo "BUILDING: ${CMD}"
${CMD}
popd

### Apply user patchset
pushd ${KERNEL_DIR}
for patch in $(ls ../*.patch 2>/dev/null); do
  echo "PATCHING: ${patch}"
  patch -t -p1 < $patch
done
popd

### Pack sources
OUTPUT_ROOT=root.tar
CMD="tar --transform=s,^,/usr/src/,S --transform=s/${KERNEL_DIR}/${KERNEL_DIR}-${KERNEL_VERSION}-embedux/ --exclude=.git -cf ${OUTPUT_ROOT} ${KERNEL_DIR}"
echo "PACKING: ${CMD}"
${CMD}
 
### Copy config into sources
CMD="cp ${KERNEL_CONFIG} ${KERNEL_DIR}/${KERNEL_CONFIG}"
echo "Prepraring: ${CMD}"
${CMD}

### Kernel
CMD="make -C ${KERNEL_DIR} -j$(nproc) ${KERNEL_IMG}"
echo "BUILDING: ${CMD}"
${CMD}

### DTB
CMD="make -C ${KERNEL_DIR} -j$(nproc) ${KERNEL_DTB}"
echo "BUILDING: ${CMD}"
${CMD}

### Modules
MODULES_DIR="modules"

if [ $(grep CONFIG_MODULES=y ${KERNEL_DIR}/${KERNEL_CONFIG}) ]
  then
    CMD="make modules -C ${KERNEL_DIR}"
    echo "BUILDING: ${CMD}"
    ${CMD}

    CMD="mkdir ${MODULES_DIR}"
    echo "PREPARING: ${CMD}"
    ${CMD}
    
    CMD="export INSTALL_MOD_PATH=$(pwd)/${MODULES_DIR}"
    echo "PREPARING: ${CMD}"
    ${CMD}

    CMD="make modules_install -C ${KERNEL_DIR}"
    echo "BUILDING: ${CMD}"
    ${CMD}

    CMD="unset INSTALL_MOD_PATH"
    echo "CLEANING: ${CMD}"
    ${CMD}
fi

### Provide output
OUTPUT_DIR="output"
OUTPUT_PREFIX="$(git rev-parse --abbrev-ref HEAD)_$(date '+%Y%m%d%H%M%S')_$(git rev-parse --short HEAD)"
OUTPUT_KERNEL=${OUTPUT_PREFIX}_boot.tar.gz"
OUTPUT_ROOT_Z2="${OUTPUT_PREFIX}_${OUTPUT_ROOT}.bz2"
OUTPUT_CONFIG="${OUTPUT_PREFIX}_${KERNEL_CONFIG}"

CMD="mkdir -p ${OUTPUT_DIR}"
echo "PREPARING: ${CMD}"
${CMD}

CMD="tar -czf ${OUTPUT_DIR}/${OUTPUT_KERNEL} -C ${KERNEL_DIR}/arch/${ARCH}/boot ${KERNEL_IMG} -C dts ${KERNEL_DTB}"
echo "PACKING: ${CMD}"
${CMD}

if [ -e ${MODULES_DIR} ]
  then 
    CMD="tar --transform=s/modules// -rf ${OUTPUT_ROOT} ${MODULES_DIR}"
    echo "PACKING: ${CMD}"
    ${CMD}
fi

CMD="bzip2 -5 ${OUTPUT_ROOT}"
echo "PACKING: ${CMD}"
${CMD}

CMD="mv ${OUTPUT_ROOT}.bz2 ${OUTPUT_DIR}/${OUTPUT_ROOT_Z2}"
echo "PROVIDING: ${CMD}"
${CMD}

if [ -e ${KERNEL_CONFIG} ]
  then 
    CMD="cp ${KERNEL_CONFIG} ${OUTPUT_DIR}/${OUTPUT_CONFIG}"
    echo "PROVIDING: ${CMD}"
    ${CMD}
fi
